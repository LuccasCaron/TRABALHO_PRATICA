// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PROJETO_ADVOCACIA.Data;

#nullable disable

namespace PROJETO_ADVOCACIA.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PROJETO_ADVOCACIA.Models.Advogado", b =>
                {
                    b.Property<string>("CPF")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("CPF");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Cargo");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nome");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Telefone");

                    b.HasKey("CPF");

                    b.ToTable("Advogados");
                });

            modelBuilder.Entity("PROJETO_ADVOCACIA.Models.Cliente", b =>
                {
                    b.Property<string>("CPF")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("CPF");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(40)")
                        .HasColumnName("Email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nome");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Telephone");

                    b.HasKey("CPF");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("PROJETO_ADVOCACIA.Models.Estagiario", b =>
                {
                    b.Property<string>("CPF")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("CPF");

                    b.Property<string>("CpfAdvogado")
                        .IsRequired()
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nome");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Telefone");

                    b.HasKey("CPF");

                    b.HasIndex("CpfAdvogado");

                    b.ToTable("Estagiarios");
                });

            modelBuilder.Entity("PROJETO_ADVOCACIA.Models.Livro", b =>
                {
                    b.Property<int>("ISBN")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ISBN");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ISBN"));

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Autor");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Titulo");

                    b.HasKey("ISBN");

                    b.ToTable("Livros");
                });

            modelBuilder.Entity("PROJETO_ADVOCACIA.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Nome");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Senha");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PROJETO_ADVOCACIA.Models.Estagiario", b =>
                {
                    b.HasOne("PROJETO_ADVOCACIA.Models.Advogado", "Advogado")
                        .WithMany()
                        .HasForeignKey("CpfAdvogado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Advogado");
                });
#pragma warning restore 612, 618
        }
    }
}
